/*
 * Vera - a common library for all of TCN's discord bots.
 *
 * Copyright (C) 2023 Thomas Wessel and the rest of Team Creative Name
 *
 *
 * This library is licensed under the GNU Lesser General Public License v2.1
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
 * USA
 *
 *
 * For more information, please check out the original repository of this project on github
 * https://github.com/Team-Creative-Name/Vera
 */
package com.tcn.vera.testCommands.slashCommands;

import com.tcn.vera.commands.SlashCommandTemplate;
import com.tcn.vera.interactions.ModalInterface;
import net.dv8tion.jda.api.events.interaction.ModalInteractionEvent;
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.text.TextInput;
import net.dv8tion.jda.api.interactions.components.text.TextInputStyle;
import net.dv8tion.jda.api.interactions.modals.Modal;

public class ModalSlashCommand extends SlashCommandTemplate implements ModalInterface {

    private final Modal responseModal;

    public ModalSlashCommand(){
        this.commandName = "modal-slash-test";
        this.help = "Tests modals with slash commands";

        /*This type of response is generated by the bot after the slash command is executed. We can use the default slash
           command generator.*/


        //generate the modal which we want to use as the response for this command.
        TextInput name = TextInput.create("name", "Name", TextInputStyle.SHORT)
                .setPlaceholder("Your name here")
                .setMinLength(300)
                .setMaxLength(600)
                .build();

        TextInput favoriteFood = TextInput.create("fFood", "Favorite food", TextInputStyle.PARAGRAPH)
                .setPlaceholder("Your favorite food here")
                .setMaxLength(2)
                .build();
        responseModal = Modal.create("foodPicker", "What is your favorite food?")
                .addActionRows(ActionRow.of(name), ActionRow.of(favoriteFood)).build();

    }

    @Override
    public void executeSlashCommand(SlashCommandInteractionEvent event) {
        event.replyModal(responseModal).queue();
    }


    @Override
    public void executeModal(ModalInteractionEvent event) {
        event.reply("We have received your opinion and have decided that it is worthless.").queue();
    }

    @Override
    public Modal getModal() {
        return responseModal;
    }
}
